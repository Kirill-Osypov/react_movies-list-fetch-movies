{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onAdd","useState","search","setSearch","setMovie","error","setError","onSubmit","event","preventDefault","fetch","then","response","json","film","Response","newMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","length","value","onChange","target","onClick","App","data","setMovies","find","current","ReactDOM","render","document","getElementById"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,wBCH3BG,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOL,EAAP,KAAcQ,EAAd,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAmCA,OACE,oCACE,0BACEjB,UAAU,aACVkB,SArCc,SAACC,GCVC,IAAAvB,ED8BpB,OAnBAuB,EAAMC,kBCXcxB,EDaXiB,ECboBQ,MAAM,GAAD,OAHrB,0BAGqB,oBAF1B,WAE0B,cAAiCzB,IACpE0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDatBF,MAAK,SAACG,GACL,GAAsB,SAAlBA,EAAKC,SAAqB,CAC5B,IAAMC,EAAW,CACf/B,MAAO6B,EAAKG,MACZ/B,YAAa4B,EAAKI,KAClB/B,OAAQ2B,EAAKK,OACb/B,QAAQ,8BAAD,OAAgC0B,EAAKM,QAC5CtB,OAAQgB,EAAKM,QAGf,OAAOhB,EAASY,GAGlB,OAAOV,EAAS,2CAGbH,EAAU,MAmBb,yBAAKd,UAAU,SACb,2BAAOA,UAAU,QAAQgC,QAAQ,eAAjC,eAIA,yBAAKhC,UAAU,WACb,2BACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAWoC,IAAW,QAAS,CAC7B,YAA8B,IAAjBpB,EAAMqB,SAErBC,MAAOzB,EACP0B,SA9BS,SAACpB,GACpBL,EAAUK,EAAMqB,OAAOF,OACvBrB,EAAS,QAgCH,uBAAGjB,UAAU,kBACVgB,IAIL,yBAAKhB,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,mBAFZ,iBAQF,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,oBACVyC,QAhDI,WACd9B,EAAMJ,GACNQ,EAAS,MA2CD,sBAWN,yBAAKf,UAAU,aACM,IAAjBO,EAAM8B,QACN,oCACE,wBAAIrC,UAAU,SAAd,WACA,kBAAC,EAAcO,O,OE/FdmC,EAAM,WACjB,MAA4B9B,mBAAS+B,GAArC,mBAAOtC,EAAP,KAAeuC,EAAf,KAWA,OACE,oCACE,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEW,MAjBM,SAACc,GAEZpB,EAAOwC,MAAK,SAAAtC,GAAK,OAAIA,EAAME,SAAWgB,EAAKhB,WACzB,IAAhBgB,EAAKY,QAERO,GAAU,SAAAE,GAAO,4BAAQA,GAAR,CAAiBrB,cCTxCsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.77fa13cf.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [search, setSearch] = useState('');\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState('');\n\n  const searchMovie = (event) => {\n    event.preventDefault();\n\n    getMovie(search)\n      .then((film) => {\n        if (film.Response === 'True') {\n          const newMovie = {\n            title: film.Title,\n            description: film.Plot,\n            imgUrl: film.Poster,\n            imdbUrl: `https://www.imdb.com/title/${film.imdbID}`,\n            imdbId: film.imdbID,\n          };\n\n          return setMovie(newMovie);\n        }\n\n        return setError('Can\\'t find a movie with such a title');\n      });\n\n    return setSearch('');\n  };\n\n  const handleChange = (event) => {\n    setSearch(event.target.value);\n    setError('');\n  };\n\n  const addFilm = () => {\n    onAdd(movie);\n    setMovie('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={searchMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error.length !== 0,\n              })}\n              value={search}\n              onChange={handleChange}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {error}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addFilm}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {(movie.length !== 0) && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com';\nconst key = '885b5a27';\n\nexport const getMovie = title => fetch(`${BASE_URL}/?apikey=${key}&t=${title}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addFilm = (film) => {\n    if (\n      !movies.find(movie => movie.imdbId === film.imdbId)\n      && film.length !== 0\n    ) {\n      setMovies(current => [...current, film]);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            onAdd={addFilm}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}